import 'package:carousel_slider/carousel_controller.dart';
import 'package:carousel_slider/carousel_slider.dart';
import 'package:flutter/material.dart';

class Services_Day extends StatefulWidget {
  const Services_Day({Key? key}) : super(key: key);

  @override
  State<Services_Day> createState() => _Services_DayState();
}

class _Services_DayState extends State<Services_Day> {
  List imageList = [
    {"id": 1, "image_path": 'assets/services_day.jpeg'},
    {"id": 2, "image_path": 'assets/service_day_2.jpeg'},
    {"id": 2, "image_path": 'assets/service_story.jpg'},
    {"id": 2, "image_path": 'assets/highlights.jpg'},
    {"id": 2, "image_path": 'assets/highlisght_2.jpg'},
  ];
  final CarouselController carouselController = CarouselController();
  int currentIndex = 0;

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('realme Service Day'),
        backgroundColor: Colors.yellow,
      ),
      body: SingleChildScrollView(
        physics: BouncingScrollPhysics(),
        child: Column(children: [
          Stack(
            children: [
              InkWell(
                onTap: () {
                  print(currentIndex);
                },
                child: Card(
                  elevation: 5,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(8)
                  ),
                  color: Colors.grey.shade200,
                  child: Padding(
                    padding: const EdgeInsets.all(10.0),
                    child: CarouselSlider(
                      items: imageList
                          .map(
                            (item) => Image.asset(
                              item['image_path'],

                             fit: BoxFit.cover,

                            ),
                          )
                          .toList(),
                      carouselController: carouselController,
                      options: CarouselOptions(
                        scrollPhysics: const BouncingScrollPhysics(),
                        autoPlay: true,
                        aspectRatio: 2,
                        viewportFraction: 1,
                        onPageChanged: (index, reason) {
                          setState(() {
                            currentIndex = index;
                          });
                        },
                      ),
                    ),
                  ),
                ),
              ),
              Positioned(
                bottom: 10,
                left: 0,
                right: 0,
                child: Row(
                  mainAxisAlignment: MainAxisAlignment.center,
                  children: imageList.asMap().entries.map((entry) {
                    return GestureDetector(
                      onTap: () => carouselController.animateToPage(entry.key),
                      child: Container(
                        width: currentIndex == entry.key ? 17 : 7,
                        height: 7.0,
                        margin: const EdgeInsets.symmetric(
                          horizontal: 3.0,
                        ),
                        decoration: BoxDecoration(
                            borderRadius: BorderRadius.circular(10),
                            color: currentIndex == entry.key
                                ? Colors.red
                                : Colors.teal),
                      ),
                    );
                  }).toList(),
                ),
              ),
            ],
          ),
          Padding(
            padding: const EdgeInsets.all(10.0),
            child: Container(
              child: Card(
                elevation: 5,
                  shape: RoundedRectangleBorder(
                    borderRadius: BorderRadius.circular(10)
                  ),
                color: Colors.grey.shade200,
                child: Text(
                  '                \n            ЁЯдЧ рж░рж┐ржпрж╝рзЗрж▓ржорж┐ рж╕рж╛рж░рзНржнрж┐рж╕ ржбрзЗ  ЁЯдй \n ржЖржкржирж╛рж░ ржХрзНржпрж╛рж▓рзЗржирзНржбрж╛рж░рзЗ рззрзм, рззрзн, рззрзо ржкрзНрж░рждрзНржпржХ ржорж╛рж╕рзЗрж░ред realme рж╕рж╛рж░рзНржнрж┐рж╕ ржбрзЗ рж╣рж┐рж╕рзЗржмрзЗ  ржЪрж┐рж╣рзНржирж┐ржд ржХрж░рзБржи ржПржмржВ ржЙржкржнрзЛржЧ ржХрж░рзБржи ржмрж┐ржнрж┐ржирзНржи рж╕рзНржорж╛рж░рзНржЯржлрзЛржи ржорзЗрж░рж╛ржорждрзЗрж░ рж╕рзБржмрж┐ржзрж╛ ржпрж╛ рж╢рзБржзрзБржорж╛рждрзНрж░  realme ржмрзНржпржмрж╣рж╛рж░ржХрж╛рж░рзАрж░ ржЬржирзНржпредЁЯдЧ \n\n[ржлрзНрж░рзА ] ржЖржЙржЯ ржЕржл ржУржпрж╝рж╛рж░рзЗржирзНржЯрж┐ ржорзЗрж░рж╛ржоржд ржЪрж╛рж░рзНржЬ ред [ржлрзНрж░рзА ] рж╕рзНржорж╛рж░рзНржЯржлрзЛржи ржкрж░рж┐рж╖рзНржХрж╛рж░ ржПржмржВ рж░ржХрзНрж╖ржгрж╛ржмрзЗржХрзНрж╖ржгред\n ''[ржлрзНрж░рзА ] рж╕ржлржЯржУржпрж╝рзНржпрж╛рж░ ржЖржкржЧрзНрж░рзЗржб (рж╢рзБржзрзБржорж╛рждрзНрж░ ржЕржлрж┐рж╕рж┐ржпрж╝рж╛рж▓ рж╣рзНржпрж╛ржирзНржбрж╕рзЗржЯрзЗрж░ ржЬржирзНржп)ред '
                      '[ржлрзНрж░рзА ] ржкрзНрж░рждрж┐рж░ржХрзНрж╖рж╛ржорзВрж▓ржХ ржлрж┐рж▓рзНржоред ржЖржЙржЯ  ржЕржл ржУржпрж╝рж╛рж░рзЗржирзНржЯрж┐  рж╕рж╛рж░рзНржнрж┐рж╕рзЗ рззрзж% ржЫрж╛ржбрж╝! ржЕржирзНржпрж╛ржирзНржп ржПржХрж╕рзЗрж╕рж░рж┐ржЬ ржПржмржВ рж╕рзЗржлржЧрж╛рж░рзНржб рж╕рж╛рж░рзНржнрж┐рж╕рзЗ ржкрж╛ржЪрзНржЫрзЗржи рззрзж% ржЫрж╛ржбрж╝!\n\nржкрзНрж░рждрж┐ ржорж╛рж╕рзЗрж░ рззрзм рждрж╛рж░рж┐ржЦ ржерзЗржХрзЗ рззрзо рждрж╛рж░рж┐ржЦ ржкрж░рзНржпржирзНржд рж░рж┐ржпрж╝рзЗрж▓ржорж┐ рж╕рж╛рж░рзНржнрж┐рж╕ рж╕рзЗржирзНржЯрж╛рж░рзЗ ржЖрж╕рзБржи ржЖрж░ ржЙржкржнрзЛржЧ ржХрж░рзБржи рж░рж┐ржпрж╝рзЗрж▓-ржЯрж╛ржЗржо рж╕рж╛рж░рзНржнрж┐рж╕ ржЕржнрж┐ржЬрзНржЮрждрж╛рж░ рж╕рж╛ржерзЗ ржжрж╛рж░рзБржг ржбрж┐рж╕ржХрж╛ржЙржирзНржЯ ЁЯе│\n\nржмрж┐: ржжрзНрж░рж╖рзНржЯржмрзНржп: рждржмрзЗ рж╕рж╛рж░рзНржнрж┐рж╕ рж╕рзЗржирзНржЯрж╛рж░рзЗ ржпрж╛ржУржпрж╝рж╛рж░ ржЖржЧрзЗ ржмрж╛ржбрж╝рж┐рждрзЗ ржЖржкржирж╛рж░ ржлрзЛржирзЗрж░ ржбрзЗржЯрж╛ ржмрзНржпрж╛ржХржЖржк рж╕ржорзНржкрзВрж░рзНржг ржХрж░рзЗржЗ ржЖрж╕ржмрзЗржиред',
                  style: TextStyle(
                      fontSize: 20,
                      color: Colors.black,

                      ),

                ),
              ),
            ),
          )
        ]),
      ),
    );
  }
}
